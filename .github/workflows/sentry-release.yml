name: ReleaseWorkflow

on:
  release:
    types: [published]


jobs:
  createSentryRelease:
    runs-on: ubuntu-latest
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{secrets.SENTRY_ORG}}
      SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT}}
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
         fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-${{ runner.node_version}}-yarn-v1-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.node_version}}-yarn-v1-${{ hashFiles('yarn.lock') }}
      
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --silent

      - name: Build the packages
        run: yarn build
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        with:
          environment: production
          sourcemaps: './build/static/js/'
          version: ${{ github.event.release.tag_name }}
      